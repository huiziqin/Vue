1.创建项目文件夹（不使用中文）
2.使用npm管理起来   npm init -y   创建包管理文件
3.创建两个文件夹 
    +dist：存放项目打包之后输出的文件   
    +src:存放源代码
        -index.html  项目首页
        -main.js      项目的js入口文件
            main.js打包到index.html里   
                webpack 打包路径  输出路径
                在index.html里 导入bundle.js

安装工具  
    1、实现自动打包
        1、 cnpm i webpack-dev-server@2.9.1 -D
            依赖于本地webpack   安装： cnpm i webpack@2.2.0 -D
        2、在项目根目录创建 webpack配置文件  webpack.config.js
        3、实现自动打包
            添加指令：在package.json中："dev": "webpack-dev-server --open --port 3000 --contentBase src --hot"
            运行：npm run dev 
            注意  自动打包的js文件在内存   引用路径为根目录下bundle.js

 2、把指定模板页面也生成一份放入内存  并且工具会自动注入打包好的js文件在页面底部
    安装：cnpm i html-webpack-plugin -D
    1、webpack.config.js  导入模块:  var htmlWebpackPlugin = require('html-webpack-plugin')
    2、配置插件 需要在导出的对象中 挂载一个plugin节点->配置模板页面路径  内存页面名称

引入静态资源？
1、mian.js 中 导入静态资源文件：   import './css/index.css'   
    注意：这时打包会报错  原因：webpack默认只能处理js文件  解决方案： 安装第三方加载器
2、
    2.1、安装处理样式表的loader: cnpm i style-loader css-loader -D
    2.2、在webpack.config.js添加配置节点：
        module:{//配置所有第三方loader模块
            rules:[//第三方模块的配置规则
                    {test:/\.css$/, use:['style-loader','css-loader']},//处理css文件的loader
            ]
        },
    2.3、运行服务器：npm run dev 


默认webpack无法处理css中的URL地址,解决方案：安装loader：
    1、 cnpm i url-loader file-loader -D
    2、 {test:/\.jpg|png|bmp|gif|jpeg$/, use:['url-loader?limit=7631']},


安装bootstrap:
    cnpm i bootstrap -S





